---
- name: Prepare build and initiate logging
  ansible.builtin.shell: |
    date
    echo -n "whoami: "
    whoami
    echo "HOME: {{ ansible_env.HOME }}"
    echo "# Basic Configuration"
    echo "target_image: {{ target_image }}"
    echo "target_arch: {{ target_arch }}"
    echo "target_filetype: {{ target_filetype }}"
    echo "# Advanced Configuration"
    echo "osbuild_vmimages_download_baseurl: {{ osbuild_vmimages_download_baseurl }}"
    echo "osbuild_packages: {{ osbuild_packages }}"
    echo "sample_images_git_url: {{ sample_images_git_url }}"
    echo "sample_images_git_ref: {{ sample_images_git_ref }}"
    echo "sample_images_workdir: {{ sample_images_workdir }}"
    echo "sample_images_build_path: {{ sample_images_build_path }}"
  ignore_errors: true
  register: results

- name: Warn for cross-arch assembly
  ansible.builtin.debug:
    msg:
      - "Warning! You're assembling aarch64 system images on an x86_64 host."
      - "Emulation will be used and the process will be very slow!"
  when: target_arch == "aarch64" and ansible_architecture == "x86_64"

- name: Warn for unsupported cross-arch assembly
  ansible.builtin.debug:
    msg:
      - "Warning! You're attempting to assemble x86_64 system images on an aarch64 host."
      - "This is not supported yet!"
  when: target_arch == "x86_64" and ansible_architecture == "aarch64"

- name: Prepare output directory
  ansible.builtin.file:
    path: "./out"
    state: directory
  delegate_to: localhost

- name: Write log files
  copy:
    content: "{{ results.stdout }}"
    dest: "./out/log.init.txt"
  delegate_to: localhost

- name: Error handler
  debug:
     var: results
  failed_when: true
  when:
     results is failed
